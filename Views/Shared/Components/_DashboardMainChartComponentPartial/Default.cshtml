@model RevenueExpenseChartViewModel

@{
    var months = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Months));
    var revenueTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.RevenueTotals));
    var expenseTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ExpenseTotals));
}

<div class="col-12 col-lg-8 col-xl-8 d-flex">
    <div class="card w-100 rounded-4">
        <div class="card-body">
            <div class="d-flex align-items-center mb-3">
                <h6 class="mb-0">Sigorta Satış ve Ödeme Grafiği</h6>
                <div class="fs-5 ms-auto dropdown">
                    <div class="dropdown-toggle dropdown-toggle-nocaret cursor-pointer" data-bs-toggle="dropdown">
                        <i class="bi bi-three-dots"></i>
                    </div>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#">Action</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#">Something else here</a></li>
                    </ul>
                </div>
            </div>
            <div class="d-flex align-items-center gap-3 mb-3">
                <div>
                    <h4 class="text-success mb-0" id="revenueTotal">₺ @ViewBag.sumAmount</h4>
                    <p class="mb-0">Gelen Tutar</p>
                </div>
                <div class="vr"></div>
                <div>
                    <h4 class="text-danger mb-0">₺ @ViewBag.expensesSumAmount</h4>
                    <p class="mb-0">Giden Tutar</p>
                </div>
            </div>

            <!-- Chart Alanı -->
            <div class="chart-container" style="height: 320px;">
                <div id="mainChart"></div>
            </div>
        </div>
    </div>
</div>
@*  <canvas id="revenueExpenseChart"></canvas> *@



<script>
    document.addEventListener("DOMContentLoaded", function () { "use strict";

        const months = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Months));
        const revenueData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.RevenueTotals));
        const expenseData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ExpenseTotals));

      var options = {
        chart: {
            height: 350,
            type: 'area',
            stacked: false,
            foreColor: '#4e4e4e',
            toolbar: {
                  show: false
                },
            dropShadow: {
                enabled: false,
                opacity: 0.1,
                blur: 3,
                left: -7,
                top: 22,
            }
        },
        plotOptions: {
            bar: {
        columnWidth: '30%',
          endingShape: 'rounded',
                dataLabels: {
                    position: 'top', // top, center, bottom
                },
            }
        },
        dataLabels: {
            enabled: false,
            formatter: function(val) {
              return parseInt(val);
            },
            offsetY: -20,
            style: {
                fontSize: '14px',
                colors: ["#304758"]
            }
        },
        stroke: {
            show: true,
            width: [4, 4],
            dashArray: [0, 3],
            curve: 'smooth'
           // colors: ['transparent']
        },
        grid:{
            show: true,
            borderColor: 'rgba(0, 0, 0, 0.10)',
        },
        series: [{
            name: 'Gelir',
            type: 'area',
            data: revenueData
        },{
            name: 'Gider',
            type: 'line',
            data: expenseData
        }],
        xaxis: {
            categories:months,
        },
        colors: ["#02ba5a", '#e72e7a'],
        tooltip: {
            theme: 'dark',
            y: {
                formatter: function (val) {
                    return " " + val + "₺"
                }
            }
        },
        responsive: [{
            breakpoint: 480,
            options: {
                chart: {
                 height: 330,
                 stacked: true,
                      },
            legend: {
              show: !0,
              position: "bottom",
              horizontalAlign: "center",
              offsetX: -20,
              fontSize: "10px",
              markers: {
                radius: 50,
                width: 10,
                height: 10
              }
              },
              plotOptions: {
              bar: {
                columnWidth: '30%'
                }
              }
                  }
              }]
    }

    var chart = new ApexCharts(document.querySelector("#mainChart"), options);

    chart.render();

    });
</script>

@* <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const months = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.Months));
        const revenueTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.RevenueTotals));
        const expenseTotals = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.ExpenseTotals));

        const ctx = document.getElementById('revenueExpenseChart').getContext('2d');
        new Chart(ctx, {
            type: 'line',
            data: {
                labels: months,
                datasets: [
                    {
                        label: "Gelir",
                        data: revenueTotals,
                        fill: true,
                        borderColor: "green",
                        backgroundColor: "rgba(0, 128, 0, 0.1)",
                        tension: 0.4,
                        borderWidth: 2
                    },
                    {
                        label: "Gider",
                        data: expenseTotals,
                        fill: false,
                        borderColor: "red",
                        borderDash: [5,5],
                        tension: 0.4,
                        borderWidth: 2
                    }
                ]
            },
            options: {
                plugins: { legend: { display: true } },
                scales: {
                    y: { beginAtZero: true }
                }
            }
        });
    });


</script> *@





